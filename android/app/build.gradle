apply plugin: 'com.android.application'

println ">>> JAVA_HOME = " + System.getenv("JAVA_HOME")
println ">>> Gradle using Java version = " + JavaVersion.current()

android {
    namespace "com.jogit64.voiceworkouttracker"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.jogit64.voiceworkouttracker"
        minSdkVersion    rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode  1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    /* Force Java 17 pour ce module */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                          'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir { dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"

    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    testImplementation        "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) apply plugin: 'com.google.gms.google-services'
} catch (Exception ignored) {}
